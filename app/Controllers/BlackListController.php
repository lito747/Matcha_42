<?php/** * Created by PhpStorm. * User: dkliukin * Date: 10/22/18 * Time: 8:37 PM */namespace App\Controllers;use App\Models\BlackList;use Slim\Http\Request;use Slim\Http\Response;/** * Class BlackListController * @package App\Controllers */class BlackListController extends BlackList{    /**     * @param Request $request     * @param Response $response     * @param $argc     * @return !array     */    public final function addUser(Request $request, Response $response, $argc){        $token = $request->getParams();        return $response->withStatus(200)            ->withHeader('Content-Type', 'application/json')            ->write(json_encode($this->blockUser(                htmlspecialchars(addslashes($token['target'])),                htmlspecialchars(addslashes($token['source']))                )));    }    /**     * @param Request $request     * @param Response $response     * @param $argc     * @return !array     */    public final function removeUser(Request $request, Response $response, $argc){        $token = $request->getParams();        return $response->withStatus(200)            ->withHeader('Content-Type', 'application/json')            ->write(json_encode($this->unblockUser(htmlspecialchars(                addslashes($token['target'])), htmlspecialchars(addslashes($token['source']))            )));    }    /**     * @param Request $request     * @param Response $response     * @param $argc     * @return !array     */    public final function reviewList(Request $request, Response $response, $argc){        return $response->withStatus(200)            ->withHeader('Content-Type', 'application/json')            ->write(json_encode($this->getBlockedUsers(                htmlspecialchars(addslashes($request->getParam('token')))            )));    }    /**     * @param Request $request     * @param Response $response     * @param $argc     * @return !array     */    public final function checkUser(Request $request, Response $response, $argc){        return $response->withStatus(200)            ->withHeader('Content-Type', 'application/json')            ->write(json_encode($this->checkIfBlocked(                htmlspecialchars(addslashes($request->getParam('sourceToken'))),                htmlspecialchars(addslashes($request->getParam('targetToken')))            )));    }}